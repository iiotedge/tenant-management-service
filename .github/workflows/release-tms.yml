name: CI/CD â€¢ TMS

on:
  pull_request:
    paths:
      - '**'
      - '.github/workflows/release-tms.yml'
  push:
    branches: [ main ]
    paths:
      - '**'
      - '.github/workflows/release-tms.yml'
  workflow_dispatch: {}

env:
  IMAGE_NAME: ghcr.io/iotmining/tenant-management-service
  JAVA_VERSION: '21'

concurrency:
  group: tms-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write
  security-events: write

jobs:
  # 1) Build & Test
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}
          cache: maven

      - name: Create GitHub Packages settings.xml
        env:
          GH_USERNAME: ${{ github.actor }}
          GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SETTINGS="$RUNNER_TEMP/gpr-settings.xml"
          TOKEN="${GH_PACKAGES_TOKEN:-$GITHUB_TOKEN}"
          cat > "$SETTINGS" <<XML
          <settings>
            <servers>
              <server>
                <id>github</id>
                <username>${GH_USERNAME}</username>
                <password>${TOKEN}</password>
              </server>
            </servers>
            <profiles>
              <profile>
                <id>github-packages</id>
                <repositories>
                  <repository>
                    <id>github</id>
                    <url>https://maven.pkg.github.com/iotmining/platform-build</url>
                    <releases><enabled>true</enabled></releases>
                    <snapshots><enabled>true</enabled></snapshots>
                  </repository>
                </repositories>
              </profile>
            </profiles>
            <activeProfiles>
              <activeProfile>github-packages</activeProfile>
            </activeProfiles>
          </settings>
          XML
          echo "MAVEN_SETTINGS=$SETTINGS" >> "$GITHUB_ENV"
          echo "GPR_SETTINGS=$SETTINGS" >> "$GITHUB_ENV"

      - name: Maven Verify
        run: mvn -s "${MAVEN_SETTINGS}" -B -ntp -DskipTests=false verify

      - name: Upload JUnit reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-reports
          path: |
            **/target/surefire-reports/*.xml
            **/target/failsafe-reports/*.xml
          if-no-files-found: ignore

  # 2) Docker Build & Push
  docker:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          install: true

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=sha-${{ github.sha }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Log in to GHCR
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          secrets: |
            id=gpr,src=${{ env.GPR_SETTINGS }}
          build-args: |
            SKIP_TESTS=true
            VCS_REF=${{ github.sha }}
            BUILD_DATE=${{ github.run_id }}
          cache-from: type=gha,scope=tms
          cache-to: type=gha,mode=max,scope=tms
