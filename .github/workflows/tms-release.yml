name: tms-release
on:
  push:
    branches: ["main"]
    paths: ["services/tms-service/**", ".github/workflows/**"]

permissions:
  contents: write
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  ORG: iotmining
  SERVICE: tms-service

jobs:
  release:
    runs-on: ubuntu-latest
    defaults: { run: { working-directory: services/tms-service } }
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: maven
          server-id: github
          server-username: GITHUB_ACTOR
          server-password: GITHUB_TOKEN

      - name: Build JAR (resolves Parent+BOM from GitHub Packages)
        run: mvn -B -ntp clean package

      - name: Build image
        run: |
          IMG=${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.SERVICE }}:${{ github.sha }}
          docker build -t $IMG .
          echo "IMG=$IMG" >> $GITHUB_ENV

      - name: Trivy Scan
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ env.IMG }}
          format: table
          exit-code: '1'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Login GHCR
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: docker push ${{ env.IMG }}

      - name: Package Helm chart
        run: |
          cd platform/helm-charts/${{ env.SERVICE }}
          yq -i '.image.repository="${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.SERVICE }}" | .image.tag="${{ github.sha }}"' values.yaml
          helm package .
          CHART=$(ls *.tgz)
          echo "CHART=$CHART" >> $GITHUB_ENV

      - name: Push Helm chart to OCI (ghcr.io/iotmining/helm)
        run: |
          helm registry login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          helm push ${{ env.CHART }} oci://ghcr.io/${{ env.ORG }}/helm

      - name: Tag release
        run: |
          ver=$(date +'%Y.%m.%d')-${{ github.run_number }}
          git tag "${{ env.SERVICE }}-${ver}"
          git push origin "${{ env.SERVICE }}-${ver}"
