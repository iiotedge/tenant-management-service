name: tms-release
on:
  push:
    branches: [ "main" ]
    paths:
      - "**"
      - ".github/workflows/**"

permissions:
  contents: write
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  ORG: iotmining
  SERVICE: tenant-management-service

jobs:
  release:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .   # adjust if POM is elsewhere
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show tree (debug)
        run: ls -la && echo && find . -maxdepth 2 -name pom.xml -print

      - name: Setup Java 21 + Maven settings for GitHub Packages
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: maven
          server-id: github
          server-username: ${{ secrets.GH_PACKAGES_USER }}
          server-password: ${{ secrets.GH_PACKAGES_TOKEN }}

      - name: Build JAR (resolves parent from GitHub Packages)
        run: mvn -B -ntp clean package

      - name: Build image
        run: |
          IMG=${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.SERVICE }}:${{ github.sha }}
          docker build -t $IMG .
          echo "IMG=$IMG" >> $GITHUB_ENV

      - name: Scan image
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ env.IMG }}
          format: table
          exit-code: '1'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Login GHCR
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: docker push ${{ env.IMG }}

      # (optional) chart packaging/push if this repo holds the chart
      - name: Package Helm chart
        if: hashFiles('platform/helm-charts/**/Chart.yaml') != ''
        run: |
          CHART_DIR=$(dirname $(git ls-files "platform/helm-charts/**/Chart.yaml" | head -n1))
          cd "$CHART_DIR"
          yq -i '.image.repository="${{ env.REGISTRY }}/${{ env.ORG }}/${{ env.SERVICE }}" | .image.tag="${{ github.sha }}"' values.yaml
          helm package .
          echo "CHART=$(ls *.tgz)" >> $GITHUB_ENV
      - name: Push Helm chart
        if: env.CHART != ''
        run: |
          helm registry login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          helm push ${{ env.CHART }} oci://ghcr.io/${{ env.ORG }}/helm
