spring:
  application:
    name: IoTMining-Tenant-Management-Service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB1_URL}
    username: ${DB1_USERNAME}
    password: ${DB1_PASSWORD}
    hikari:
      pool-name: TenantProdServicePool
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 30000
      connection-timeout: 30000
      max-lifetime: 1800000
  jpa:
    hibernate:
      ddl-auto: update   # ⚠️ In production, consider "validate"
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  flyway:
    enabled: true
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka-service:9092}
  redis:
    host: ${REDIS_HOST:redis}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    timeout: ${REDIS_TIMEOUT:2000}
    pool:
      max-active: ${REDIS_POOL_MAX_ACTIVE:10}
      max-idle: ${REDIS_POOL_MAX_IDLE:5}
      min-idle: ${REDIS_POOL_MIN_IDLE:1}
      max-wait: ${REDIS_POOL_MAX_WAIT:2000}

rate:
  limit:
    max-requests: ${RATE_LIMIT_MAX_REQUESTS:50}
    time-window-seconds: ${RATE_LIMIT_TIME_WINDOW:60}
    error-message: ${RATE_LIMIT_ERROR_MESSAGE:Too many requests. Please try again later.}

cors:
  allowed-origins: ${ALLOWED_CORS_ORIGINS:https://your-frontend.example.com}

jwt:
  secret: ${JWT_SECRET_KEY_BASE64}

server:
  port: 9061